/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/clients/route";
exports.ids = ["app/api/clients/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Tri_Hartanto_Downloads_GABUTAN_MASS_HARR_ISOLIR_PANELNOC2_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/clients/route.ts */ \"(rsc)/./app/api/clients/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/clients/route\",\n        pathname: \"/api/clients\",\n        filename: \"route\",\n        bundlePath: \"app/api/clients/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Tri Hartanto\\\\Downloads\\\\GABUTAN MASS HARR\\\\ISOLIR\\\\PANELNOC2\\\\app\\\\api\\\\clients\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Tri_Hartanto_Downloads_GABUTAN_MASS_HARR_ISOLIR_PANELNOC2_app_api_clients_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/clients/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbGllbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbGllbnRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xpZW50cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNUcmklMjBIYXJ0YW50byU1Q0Rvd25sb2FkcyU1Q0dBQlVUQU4lMjBNQVNTJTIwSEFSUiU1Q0lTT0xJUiU1Q1BBTkVMTk9DMiU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDVHJpJTIwSGFydGFudG8lNUNEb3dubG9hZHMlNUNHQUJVVEFOJTIwTUFTUyUyMEhBUlIlNUNJU09MSVIlNUNQQU5FTE5PQzImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3FEO0FBQ2xJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFuZWwtbm9jLz9lMDI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXFRyaSBIYXJ0YW50b1xcXFxEb3dubG9hZHNcXFxcR0FCVVRBTiBNQVNTIEhBUlJcXFxcSVNPTElSXFxcXFBBTkVMTk9DMlxcXFxhcHBcXFxcYXBpXFxcXGNsaWVudHNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NsaWVudHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jbGllbnRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jbGllbnRzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcVHJpIEhhcnRhbnRvXFxcXERvd25sb2Fkc1xcXFxHQUJVVEFOIE1BU1MgSEFSUlxcXFxJU09MSVJcXFxcUEFORUxOT0MyXFxcXGFwcFxcXFxhcGlcXFxcY2xpZW50c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2xpZW50cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/clients/route.ts":
/*!**********************************!*\
  !*** ./app/api/clients/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\n\nfunction normalizeClientRow(row) {\n    return {\n        id: row.id,\n        username: row.username,\n        ipAddress: row.ip_address,\n        type: row.type,\n        status: row.status,\n        profile: row.profile,\n        originalProfile: row.profile_asli,\n        comment: row.comment,\n        routerId: row.router_id,\n        routerName: row.router_name\n    };\n}\nfunction toApiResponse(payload, extras = {}) {\n    const { items, page, pageSize, totalItems, totalPages, search, routerId } = payload;\n    const pagination = {\n        page,\n        pageSize,\n        totalItems,\n        totalPages,\n        hasNext: totalPages > 0 && page < totalPages,\n        hasPrevious: totalPages > 0 && page > 1,\n        search,\n        routerId\n    };\n    return {\n        status: \"ok\",\n        items: items.map(normalizeClientRow),\n        pagination,\n        ...extras\n    };\n}\nfunction parseNumeric(value) {\n    if (typeof value === \"number\" && Number.isFinite(value)) {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        const parsed = Number(value);\n        if (Number.isFinite(parsed)) {\n            return parsed;\n        }\n    }\n    return undefined;\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const page = parseNumeric(searchParams.get(\"page\"));\n        const pageSize = parseNumeric(searchParams.get(\"pageSize\"));\n        const searchParam = searchParams.get(\"search\");\n        const routerIdParam = parseNumeric(searchParams.get(\"routerId\"));\n        const routerId = routerIdParam !== undefined && routerIdParam > 0 ? routerIdParam : undefined;\n        const [result, routers] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchClients)({\n                page,\n                pageSize,\n                search: searchParam ?? undefined,\n                routerId\n            }),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchRouters)()\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(toApiResponse(result, {\n            routers\n        }), {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"[api/clients] failed to fetch data\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"error\",\n            message: \"Gagal mengambil data client.\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PATCH(request) {\n    try {\n        const body = await request.json();\n        const id = typeof body.id === \"number\" ? body.id : Number(body.id);\n        const status = typeof body.status === \"string\" ? body.status.trim().toLowerCase() : \"\";\n        const page = parseNumeric(body.page);\n        const pageSize = parseNumeric(body.pageSize);\n        const search = typeof body.search === \"string\" ? body.search : undefined;\n        const routerIdBody = parseNumeric(body.routerId);\n        const routerId = routerIdBody !== undefined && routerIdBody > 0 ? routerIdBody : undefined;\n        if (!Number.isFinite(id) || id <= 0) {\n            throw new Error(\"ID client tidak valid.\");\n        }\n        if (status !== \"aktif\" && status !== \"nonaktif\") {\n            throw new Error(\"Status tidak valid.\");\n        }\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.updateClientStatus)(id, status);\n        const [result, routers] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchClients)({\n                page,\n                pageSize,\n                search,\n                routerId\n            }),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchRouters)()\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...toApiResponse(result, {\n                routers\n            }),\n            message: \"Status client berhasil diperbarui.\"\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"[api/clients] failed to update\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Gagal memperbarui status client.\"\n        }, {\n            status: 400\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const username = typeof body.username === \"string\" ? body.username.trim() : \"\";\n        if (!username) {\n            throw new Error(\"Username wajib diisi.\");\n        }\n        const ipAddressRaw = typeof body.ipAddress === \"string\" ? body.ipAddress.trim() : null;\n        const typeRaw = typeof body.type === \"string\" ? body.type.trim() : null;\n        const statusRaw = typeof body.status === \"string\" ? body.status.trim().toLowerCase() : \"aktif\";\n        const profileRaw = typeof body.profile === \"string\" ? body.profile.trim() : null;\n        const commentRaw = typeof body.comment === \"string\" ? body.comment.trim() : null;\n        const clientRouterIdParam = parseNumeric(body.routerId);\n        const clientRouterId = clientRouterIdParam !== undefined && clientRouterIdParam > 0 ? clientRouterIdParam : null;\n        const filterRouterIdParam = parseNumeric(body.filterRouterId ?? body.activeRouterId);\n        const filterRouterId = filterRouterIdParam !== undefined && filterRouterIdParam > 0 ? filterRouterIdParam : undefined;\n        const page = parseNumeric(body.page);\n        const pageSize = parseNumeric(body.pageSize);\n        const search = typeof body.search === \"string\" ? body.search : undefined;\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.createClient)({\n            username,\n            ipAddress: ipAddressRaw,\n            type: typeRaw,\n            status: statusRaw === \"nonaktif\" ? \"nonaktif\" : \"aktif\",\n            profile: profileRaw,\n            comment: commentRaw,\n            routerId: clientRouterId\n        });\n        const [result, routers] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchClients)({\n                page,\n                pageSize,\n                search,\n                routerId: filterRouterId\n            }),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchRouters)()\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...toApiResponse(result, {\n                routers\n            }),\n            message: \"Client berhasil ditambahkan.\"\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"[api/clients] failed to create\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Gagal menambahkan client baru.\"\n        }, {\n            status: 400\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        const id = typeof body.id === \"number\" ? body.id : Number(body.id);\n        if (!Number.isFinite(id) || id <= 0) {\n            throw new Error(\"ID client tidak valid.\");\n        }\n        const username = typeof body.username === \"string\" ? body.username.trim() : undefined;\n        const ipAddressValue = body.ipAddress;\n        const ipAddress = ipAddressValue === null ? null : typeof ipAddressValue === \"string\" ? ipAddressValue.trim() : undefined;\n        const type = typeof body.type === \"string\" ? body.type.trim() : undefined;\n        const statusRaw = typeof body.status === \"string\" ? body.status.trim().toLowerCase() : undefined;\n        const status = statusRaw === undefined ? undefined : statusRaw === \"nonaktif\" ? \"nonaktif\" : statusRaw === \"aktif\" ? \"aktif\" : undefined;\n        const profileValue = body.profile;\n        const profile = profileValue === null ? null : typeof profileValue === \"string\" ? profileValue.trim() : undefined;\n        const commentValue = body.comment;\n        const comment = commentValue === null ? null : typeof commentValue === \"string\" ? commentValue.trim() : undefined;\n        const routerIdParam = parseNumeric(body.routerId);\n        const routerId = routerIdParam === undefined ? undefined : routerIdParam > 0 ? routerIdParam : routerIdParam === 0 ? null : undefined;\n        const page = parseNumeric(body.page);\n        const pageSize = parseNumeric(body.pageSize);\n        const search = typeof body.search === \"string\" ? body.search : undefined;\n        const filterRouterIdParam = parseNumeric(body.filterRouterId ?? body.activeRouterId);\n        const filterRouterId = filterRouterIdParam !== undefined && filterRouterIdParam > 0 ? filterRouterIdParam : undefined;\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.updateClient)(id, {\n            username,\n            ipAddress,\n            type,\n            status,\n            profile,\n            comment,\n            routerId\n        });\n        const [result, routers] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchClients)({\n                page,\n                pageSize,\n                search,\n                routerId: filterRouterId\n            }),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchRouters)()\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...toApiResponse(result, {\n                routers\n            }),\n            message: \"Client berhasil diperbarui.\"\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"[api/clients] failed to edit\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Gagal memperbarui client.\"\n        }, {\n            status: 400\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const idParam = searchParams.get(\"id\");\n        const id = idParam ? Number(idParam) : NaN;\n        if (!Number.isFinite(id) || id <= 0) {\n            throw new Error(\"ID client tidak valid.\");\n        }\n        const page = parseNumeric(searchParams.get(\"page\"));\n        const pageSize = parseNumeric(searchParams.get(\"pageSize\"));\n        const search = searchParams.get(\"search\") ?? undefined;\n        const routerFilterParam = parseNumeric(searchParams.get(\"routerId\"));\n        const routerId = routerFilterParam !== undefined && routerFilterParam > 0 ? routerFilterParam : undefined;\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.deleteClient)(id);\n        const [result, routers] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchClients)({\n                page,\n                pageSize,\n                search,\n                routerId\n            }),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.fetchRouters)()\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...toApiResponse(result, {\n                routers\n            }),\n            message: \"Client berhasil dihapus.\"\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"[api/clients] failed to delete\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Gagal menghapus client.\"\n        }, {\n            status: 400\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/clients/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAccessPoint: () => (/* binding */ createAccessPoint),\n/* harmony export */   createAktivasiClient: () => (/* binding */ createAktivasiClient),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createPendingItem: () => (/* binding */ createPendingItem),\n/* harmony export */   deleteAccessPoint: () => (/* binding */ deleteAccessPoint),\n/* harmony export */   deleteClient: () => (/* binding */ deleteClient),\n/* harmony export */   deletePendingItem: () => (/* binding */ deletePendingItem),\n/* harmony export */   fetchAccessPoints: () => (/* binding */ fetchAccessPoints),\n/* harmony export */   fetchClients: () => (/* binding */ fetchClients),\n/* harmony export */   fetchPendingItems: () => (/* binding */ fetchPendingItems),\n/* harmony export */   fetchRouters: () => (/* binding */ fetchRouters),\n/* harmony export */   mysqlPool: () => (/* binding */ mysqlPool),\n/* harmony export */   updateAccessPoint: () => (/* binding */ updateAccessPoint),\n/* harmony export */   updateClient: () => (/* binding */ updateClient),\n/* harmony export */   updateClientStatus: () => (/* binding */ updateClientStatus),\n/* harmony export */   verifyAdminCredentials: () => (/* binding */ verifyAdminCredentials)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n\n\nconst config = {\n    host: \"10.20.25.8\",\n    database: \"router_db\",\n    user: \"Harr1\",\n    password: \"gmdp@2025\",\n    charset: \"utf8mb4\",\n    waitForConnections: true,\n    connectionLimit: 10,\n    namedPlaceholders: true\n};\nconst globalForPool = globalThis;\nconst mysqlPool = globalForPool.__mysqlPool ?? mysql2_promise__WEBPACK_IMPORTED_MODULE_1__.createPool({\n    ...config,\n    // Ensure we always get plain objects back\n    decimalNumbers: true\n});\nif (!globalForPool.__mysqlPool) {\n    globalForPool.__mysqlPool = mysqlPool;\n}\nasync function fetchAccessPoints() {\n    const [rows] = await mysqlPool.query(`SELECT\r\n      ap.id,\r\n      ap.ssid,\r\n      ap.bts_name,\r\n      ap.ip_address,\r\n      ap.device,\r\n      ap.username,\r\n      ap.password,\r\n      ap.security,\r\n      ap.phrase_key,\r\n      ap.frequency,\r\n      ap.channel_width,\r\n      ap.mac_address,\r\n      ap.router_id,\r\n      r.name AS router_name\r\n    FROM access_points ap\r\n    LEFT JOIN routers r ON r.id = ap.router_id\r\n    ORDER BY\r\n      (ap.bts_name IS NULL OR ap.bts_name = ''),\r\n      ap.bts_name ASC,\r\n      ap.ssid ASC`);\n    return rows;\n}\nconst WIB_TIMEZONE = \"Asia/Jakarta\";\nconst ONE_DAY_MS = 24 * 60 * 60 * 1000;\nfunction formatDateToMySQL(timezone, date = new Date()) {\n    const formatter = new Intl.DateTimeFormat(\"sv-SE\", {\n        timeZone: timezone,\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        hour12: false\n    });\n    const parts = formatter.formatToParts(date).reduce((acc, part)=>{\n        if (part.type !== \"literal\") {\n            acc[part.type] = part.value.padStart(part.type === \"day\" || part.type === \"month\" || part.type === \"hour\" || part.type === \"minute\" || part.type === \"second\" ? 2 : 0, \"0\");\n        }\n        return acc;\n    }, {});\n    return `${parts.year}-${parts.month}-${parts.day} ${parts.hour ?? \"00\"}:${parts.minute ?? \"00\"}:${parts.second ?? \"00\"}`;\n}\nasync function fetchPendingItems() {\n    const now = new Date();\n    const thresholdDate = new Date(now.getTime() - ONE_DAY_MS);\n    const threshold = formatDateToMySQL(WIB_TIMEZONE, thresholdDate);\n    await mysqlPool.query(\"DELETE FROM pending_list WHERE created_at < ?\", [\n        threshold\n    ]);\n    const [rows] = await mysqlPool.query(`SELECT id, customer_name, description, address, kabupaten, created_at\r\n     FROM pending_list\r\n     WHERE created_at >= ?\r\n     ORDER BY created_at DESC`, [\n        threshold\n    ]);\n    return rows;\n}\nasync function createPendingItem(payload) {\n    const createdAt = formatDateToMySQL(WIB_TIMEZONE);\n    const [result] = await mysqlPool.query(`INSERT INTO pending_list (customer_name, description, address, kabupaten, created_at)\r\n     VALUES (?, ?, ?, ?, ?)`, [\n        payload.customerName,\n        payload.description,\n        payload.address,\n        payload.kabupaten,\n        createdAt\n    ]);\n    return result.insertId;\n}\nasync function deletePendingItem(id) {\n    await mysqlPool.query(\"DELETE FROM pending_list WHERE id = ?\", [\n        id\n    ]);\n}\nasync function verifyAdminCredentials(username, password) {\n    const [rows] = await mysqlPool.query(\"SELECT id, username, password FROM admin_users WHERE username = ? LIMIT 1\", [\n        username\n    ]);\n    if (!rows.length) {\n        return null;\n    }\n    const stored = rows[0].password ?? \"\";\n    if (!stored) {\n        return null;\n    }\n    const candidates = [\n        password\n    ];\n    if (/^[a-f0-9]{64}$/i.test(stored)) {\n        candidates.push(hashWithAlgorithm(\"sha256\", password));\n    }\n    if (/^[a-f0-9]{32}$/i.test(stored)) {\n        candidates.push(hashWithAlgorithm(\"md5\", password));\n    }\n    const isMatch = candidates.some((candidate)=>timingSafeCompare(stored, candidate));\n    if (!isMatch) {\n        return null;\n    }\n    return {\n        id: rows[0].id,\n        username: rows[0].username\n    };\n}\nconst DEFAULT_CLIENT_PAGE_SIZE = 21;\nconst MAX_CLIENT_PAGE_SIZE = 200;\nasync function fetchClients(options = {}) {\n    const rawPage = Number.isFinite(options.page) ? Number(options.page) : 1;\n    const rawPageSize = Number.isFinite(options.pageSize) ? Number(options.pageSize) : DEFAULT_CLIENT_PAGE_SIZE;\n    const pageSize = Math.min(Math.max(Math.floor(rawPageSize) || DEFAULT_CLIENT_PAGE_SIZE, 1), MAX_CLIENT_PAGE_SIZE);\n    const searchTerm = (options.search ?? \"\").trim();\n    const rawRouterId = Number.isFinite(options.routerId) ? Number(options.routerId) : null;\n    const routerId = rawRouterId && rawRouterId > 0 ? rawRouterId : null;\n    const likeTerm = searchTerm ? `%${searchTerm.replace(/\\s+/g, \"%\")}%` : null;\n    const searchParams = likeTerm ? [\n        likeTerm,\n        likeTerm,\n        likeTerm,\n        likeTerm,\n        likeTerm,\n        likeTerm,\n        likeTerm\n    ] : [];\n    const whereParts = [];\n    const whereParams = [];\n    if (likeTerm) {\n        whereParts.push(`(\r\n      u.username LIKE ?\r\n      OR u.ip_address LIKE ?\r\n      OR u.type LIKE ?\r\n      OR u.status LIKE ?\r\n      OR u.profile LIKE ?\r\n      OR u.comment LIKE ?\r\n      OR r.name LIKE ?\r\n    )`);\n        whereParams.push(...searchParams);\n    }\n    if (routerId !== null) {\n        whereParts.push(\"u.router_id = ?\");\n        whereParams.push(routerId);\n    }\n    const whereClause = whereParts.length > 0 ? `WHERE ${whereParts.join(\" AND \")}` : \"\";\n    const [countRows] = await mysqlPool.query(`SELECT COUNT(*) AS total\r\n     FROM users u\r\n     LEFT JOIN routers r ON r.id = u.router_id\r\n     ${whereClause}`, whereParams);\n    const totalItems = countRows[0]?.total ?? 0;\n    const totalPages = totalItems === 0 ? 0 : Math.ceil(totalItems / pageSize);\n    const safePage = totalPages === 0 ? 1 : Math.min(Math.max(Math.floor(rawPage) || 1, 1), totalPages);\n    const offset = (safePage - 1) * pageSize;\n    const [rows] = await mysqlPool.query(`SELECT\r\n      u.id,\r\n      u.username,\r\n      u.ip_address,\r\n      u.type,\r\n      u.status,\r\n      u.profile,\r\n      u.comment,\r\n      u.router_id,\r\n      u.profile_asli,\r\n       r.name AS router_name\r\n    FROM users u\r\n    LEFT JOIN routers r ON r.id = u.router_id\r\n    ${whereClause}\r\n    ORDER BY u.updated_at DESC, u.username ASC\r\n    LIMIT ?\r\n    OFFSET ?`, [\n        ...whereParams,\n        pageSize,\n        offset\n    ]);\n    return {\n        items: rows,\n        page: safePage,\n        pageSize,\n        totalItems,\n        totalPages,\n        search: searchTerm,\n        routerId\n    };\n}\nasync function updateClientStatus(id, status) {\n    const [rows] = await mysqlPool.query(`SELECT type, profile, profile_asli FROM users WHERE id = ? LIMIT 1`, [\n        id\n    ]);\n    if (!rows.length) {\n        throw new Error(\"Client tidak ditemukan.\");\n    }\n    const row = rows[0];\n    const currentProfile = row.profile ?? null;\n    const storedOriginalProfile = row.profile_asli?.trim() ? row.profile_asli : null;\n    const type = row.type?.trim().toLowerCase() ?? null;\n    if (status === \"nonaktif\") {\n        const originalProfile = storedOriginalProfile ?? currentProfile ?? null;\n        await mysqlPool.query(`UPDATE users\r\n       SET\r\n         status = 'nonaktif',\r\n         profile_asli = COALESCE(NULLIF(profile_asli, ''), ?),\r\n         profile = 'isolir',\r\n         manual_override = 1,\r\n         updated_at = NOW()\r\n       WHERE id = ?`, [\n            originalProfile,\n            id\n        ]);\n    } else {\n        const nextProfile = type === \"pppoe\" ? storedOriginalProfile ?? \"normal\" : \"normal\";\n        await mysqlPool.query(`UPDATE users\r\n       SET\r\n         status = 'aktif',\r\n         profile = ?,\r\n         manual_override = 1,\r\n         updated_at = NOW()\r\n       WHERE id = ?`, [\n            nextProfile,\n            id\n        ]);\n    }\n}\nasync function createClient(payload) {\n    const username = payload.username?.trim() ?? \"\";\n    if (!username) {\n        throw new Error(\"Username wajib diisi.\");\n    }\n    const ipAddress = payload.ipAddress?.trim() || null;\n    const rawType = payload.type?.trim() || null;\n    const type = rawType ? rawType.toLowerCase() : null;\n    const status = payload.status === \"nonaktif\" ? \"nonaktif\" : \"aktif\";\n    const comment = payload.comment?.trim() || null;\n    const numericRouterId = typeof payload.routerId === \"number\" && Number.isFinite(payload.routerId) && payload.routerId > 0 ? Math.floor(payload.routerId) : null;\n    const baseProfile = payload.profile?.trim() || (type === \"pppoe\" ? \"normal\" : null);\n    const profile = status === \"nonaktif\" ? \"isolir\" : baseProfile;\n    const profileAsli = baseProfile;\n    const [result] = await mysqlPool.query(`INSERT INTO users (\r\n      username,\r\n      ip_address,\r\n      type,\r\n      status,\r\n      profile,\r\n      profile_asli,\r\n      comment,\r\n      router_id,\r\n      manual_override,\r\n      created_at,\r\n      updated_at\r\n    )\r\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, 1, NOW(), NOW())`, [\n        username,\n        ipAddress,\n        type,\n        status,\n        profile,\n        profileAsli,\n        comment,\n        numericRouterId\n    ]);\n    return result.insertId;\n}\nasync function createAktivasiClient(payload) {\n    const [result] = await mysqlPool.query(`INSERT INTO aktivasi_clients (\r\n      nama_pelanggan,\r\n      nama_layanan,\r\n      kapasitas_layanan,\r\n      vlan_id,\r\n      nama_metro,\r\n      site_metro,\r\n      kapasitas_metro,\r\n      ip_address,\r\n      ip_gateway,\r\n      router_gateway,\r\n      created_by,\r\n      created_at,\r\n      updated_at\r\n    )\r\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())`, [\n        payload.namaPelanggan.trim(),\n        payload.namaLayanan.trim(),\n        payload.kapasitasLayanan.trim(),\n        payload.vlanId.trim(),\n        payload.namaMetro.trim(),\n        payload.siteMetro.trim(),\n        payload.kapasitasMetro.trim(),\n        payload.ipAddress.trim(),\n        payload.ipGateway.trim(),\n        payload.routerGateway.trim(),\n        payload.createdBy.trim()\n    ]);\n    return result.insertId;\n}\nasync function updateClient(id, payload) {\n    if (!Number.isFinite(id) || id <= 0) {\n        throw new Error(\"ID client tidak valid.\");\n    }\n    const [rows] = await mysqlPool.query(`SELECT username, ip_address, type, status, profile, profile_asli, comment, router_id\r\n     FROM users\r\n     WHERE id = ?\r\n     LIMIT 1`, [\n        id\n    ]);\n    if (!rows.length) {\n        throw new Error(\"Client tidak ditemukan.\");\n    }\n    const existing = rows[0];\n    const usernameRaw = payload.username !== undefined ? payload.username : existing.username;\n    const username = usernameRaw?.trim();\n    if (!username) {\n        throw new Error(\"Username wajib diisi.\");\n    }\n    const ipRaw = payload.ipAddress !== undefined ? payload.ipAddress : existing.ip_address;\n    const ipAddress = ipRaw ? ipRaw.trim() : null;\n    const typeRaw = payload.type !== undefined ? payload.type : existing.type;\n    const type = typeRaw ? typeRaw.trim().toLowerCase() || null : null;\n    const commentRaw = payload.comment !== undefined ? payload.comment : existing.comment;\n    const comment = commentRaw ? commentRaw.trim() : null;\n    const routerValue = payload.routerId !== undefined ? payload.routerId : existing.router_id;\n    const routerId = typeof routerValue === \"number\" && Number.isFinite(routerValue) && routerValue > 0 ? Math.floor(routerValue) : null;\n    const statusInput = payload.status ?? (existing.status === \"nonaktif\" ? \"nonaktif\" : \"aktif\");\n    const status = statusInput === \"nonaktif\" ? \"nonaktif\" : \"aktif\";\n    const profileInputRaw = payload.profile !== undefined ? payload.profile : null;\n    const profileInput = profileInputRaw ? profileInputRaw.trim() : null;\n    const existingProfile = existing.profile?.trim() || null;\n    const existingProfileAsli = existing.profile_asli?.trim() || null;\n    let profile = existingProfile;\n    let profileAsli = existingProfileAsli;\n    if (status === \"nonaktif\") {\n        const originalProfile = profileInput ?? profileAsli ?? existingProfile ?? (type === \"pppoe\" ? \"normal\" : null);\n        profileAsli = originalProfile;\n        profile = \"isolir\";\n    } else {\n        const baseProfile = profileInput ?? profileAsli ?? (existingProfile !== \"isolir\" ? existingProfile : null) ?? (type === \"pppoe\" ? \"normal\" : null);\n        profileAsli = baseProfile;\n        profile = baseProfile;\n    }\n    await mysqlPool.query(`UPDATE users\r\n     SET\r\n       username = ?,\r\n       ip_address = ?,\r\n       type = ?,\r\n       status = ?,\r\n       profile = ?,\r\n       profile_asli = ?,\r\n       comment = ?,\r\n       router_id = ?,\r\n       manual_override = 1,\r\n       updated_at = NOW()\r\n     WHERE id = ?`, [\n        username,\n        ipAddress,\n        type,\n        status,\n        profile,\n        profileAsli,\n        comment,\n        routerId,\n        id\n    ]);\n}\nasync function deleteClient(id) {\n    if (!Number.isFinite(id) || id <= 0) {\n        throw new Error(\"ID client tidak valid.\");\n    }\n    const [result] = await mysqlPool.query(\"DELETE FROM users WHERE id = ?\", [\n        id\n    ]);\n    if (result.affectedRows === 0) {\n        throw new Error(\"Client tidak ditemukan.\");\n    }\n}\nfunction timingSafeCompare(a, b) {\n    const bufA = Buffer.from(a || \"\");\n    const bufB = Buffer.from(b || \"\");\n    if (bufA.length === bufB.length) {\n        return crypto__WEBPACK_IMPORTED_MODULE_0___default().timingSafeEqual(bufA, bufB);\n    }\n    const len = Math.max(bufA.length, bufB.length);\n    const paddedA = Buffer.alloc(len);\n    const paddedB = Buffer.alloc(len);\n    bufA.copy(paddedA);\n    bufB.copy(paddedB);\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().timingSafeEqual(paddedA, paddedB) && a === b;\n}\nfunction hashWithAlgorithm(algorithm, value) {\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(algorithm).update(value).digest(\"hex\");\n}\nasync function fetchRouters() {\n    const [rows] = await mysqlPool.query(\"SELECT id, name FROM routers ORDER BY name ASC\");\n    return rows;\n}\nasync function createAccessPoint(payload) {\n    const [result] = await mysqlPool.query(`INSERT INTO access_points (\r\n      ssid,\r\n      bts_name,\r\n      ip_address,\r\n      device,\r\n      username,\r\n      password,\r\n      security,\r\n      phrase_key,\r\n      frequency,\r\n      channel_width,\r\n      mac_address,\r\n      router_id,\r\n      created_at\r\n    )\r\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())`, [\n        payload.ssid,\n        payload.btsName,\n        payload.ipAddress,\n        payload.device,\n        payload.username,\n        payload.password,\n        payload.security,\n        payload.phraseKey,\n        payload.frequency,\n        payload.channelWidth,\n        payload.macAddress,\n        payload.routerId\n    ]);\n    return result.insertId;\n}\nasync function updateAccessPoint(id, payload) {\n    await mysqlPool.query(`UPDATE access_points\r\n     SET ssid = ?, bts_name = ?, ip_address = ?, device = ?, username = ?, password = ?, security = ?, phrase_key = ?, frequency = ?, channel_width = ?, mac_address = ?, router_id = ?\r\n     WHERE id = ?`, [\n        payload.ssid,\n        payload.btsName,\n        payload.ipAddress,\n        payload.device,\n        payload.username,\n        payload.password,\n        payload.security,\n        payload.phraseKey,\n        payload.frequency,\n        payload.channelWidth,\n        payload.macAddress,\n        payload.routerId,\n        id\n    ]);\n}\nasync function deleteAccessPoint(id) {\n    await mysqlPool.query(\"DELETE FROM access_points WHERE id = ?\", [\n        id\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SCxPQUFPO1FBQ2Z6SCxRQUFRb0UsU0FBUztRQUNqQnBFLFFBQVEwSCxNQUFNO1FBQ2QxSCxRQUFRVyxRQUFRO1FBQ2hCWCxRQUFRN0MsUUFBUTtRQUNoQjZDLFFBQVEySCxRQUFRO1FBQ2hCM0gsUUFBUTRILFNBQVM7UUFDakI1SCxRQUFRNkgsU0FBUztRQUNqQjdILFFBQVE4SCxZQUFZO1FBQ3BCOUgsUUFBUStILFVBQVU7UUFDbEIvSCxRQUFRd0MsUUFBUTtRQUNoQi9CO0tBQ0Q7QUFFTDtBQUVPLGVBQWV3SCxrQkFBa0J4SCxFQUFVO0lBQ2hELE1BQU0vQyxVQUFVTSxLQUFLLENBQUMsMENBQTBDO1FBQUN5QztLQUFHO0FBQ3RFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFuZWwtbm9jLy4vbGliL2RiLnRzPzFkZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tIFwiY3J5cHRvXCI7XHJcbmltcG9ydCB0eXBlIHsgUG9vbE9wdGlvbnMgfSBmcm9tIFwibXlzcWwyL3Byb21pc2VcIjtcclxuaW1wb3J0IG15c3FsIGZyb20gXCJteXNxbDIvcHJvbWlzZVwiO1xyXG5cclxudHlwZSBSb3dEYXRhUGFja2V0ID0gbXlzcWwuUm93RGF0YVBhY2tldDtcclxuXHJcbnR5cGUgR2xvYmFsV2l0aFBvb2wgPSB0eXBlb2YgZ2xvYmFsVGhpcyAmIHtcclxuICBfX215c3FsUG9vbD86IG15c3FsLlBvb2w7XHJcbn07XHJcblxyXG5jb25zdCBjb25maWc6IFBvb2xPcHRpb25zID0ge1xyXG4gIGhvc3Q6IFwiMTAuMjAuMjUuOFwiLFxyXG4gIGRhdGFiYXNlOiBcInJvdXRlcl9kYlwiLFxyXG4gIHVzZXI6IFwiSGFycjFcIixcclxuICBwYXNzd29yZDogXCJnbWRwQDIwMjVcIixcclxuICBjaGFyc2V0OiBcInV0ZjhtYjRcIixcclxuICB3YWl0Rm9yQ29ubmVjdGlvbnM6IHRydWUsXHJcbiAgY29ubmVjdGlvbkxpbWl0OiAxMCxcclxuICBuYW1lZFBsYWNlaG9sZGVyczogdHJ1ZSxcclxufTtcclxuXHJcbmNvbnN0IGdsb2JhbEZvclBvb2wgPSBnbG9iYWxUaGlzIGFzIEdsb2JhbFdpdGhQb29sO1xyXG5cclxuZXhwb3J0IGNvbnN0IG15c3FsUG9vbCA9XHJcbiAgZ2xvYmFsRm9yUG9vbC5fX215c3FsUG9vbCA/P1xyXG4gIG15c3FsLmNyZWF0ZVBvb2woe1xyXG4gICAgLi4uY29uZmlnLFxyXG4gICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBnZXQgcGxhaW4gb2JqZWN0cyBiYWNrXHJcbiAgICBkZWNpbWFsTnVtYmVyczogdHJ1ZSxcclxuICB9KTtcclxuXHJcbmlmICghZ2xvYmFsRm9yUG9vbC5fX215c3FsUG9vbCkge1xyXG4gIGdsb2JhbEZvclBvb2wuX19teXNxbFBvb2wgPSBteXNxbFBvb2w7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEFjY2Vzc1BvaW50Um93ID0gUm93RGF0YVBhY2tldCAmIHtcclxuICBpZDogbnVtYmVyO1xyXG4gIHNzaWQ6IHN0cmluZyB8IG51bGw7XHJcbiAgYnRzX25hbWU6IHN0cmluZyB8IG51bGw7XHJcbiAgaXBfYWRkcmVzczogc3RyaW5nIHwgbnVsbDtcclxuICBkZXZpY2U6IHN0cmluZyB8IG51bGw7XHJcbiAgdXNlcm5hbWU6IHN0cmluZyB8IG51bGw7XHJcbiAgcGFzc3dvcmQ6IHN0cmluZyB8IG51bGw7XHJcbiAgc2VjdXJpdHk6IHN0cmluZyB8IG51bGw7XHJcbiAgcGhyYXNlX2tleTogc3RyaW5nIHwgbnVsbDtcclxuICBmcmVxdWVuY3k6IHN0cmluZyB8IG51bGw7XHJcbiAgY2hhbm5lbF93aWR0aDogc3RyaW5nIHwgbnVsbDtcclxuICBtYWNfYWRkcmVzczogc3RyaW5nIHwgbnVsbDtcclxuICByb3V0ZXJfaWQ6IG51bWJlciB8IG51bGw7XHJcbiAgcm91dGVyX25hbWU6IHN0cmluZyB8IG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hBY2Nlc3NQb2ludHMoKTogUHJvbWlzZTxBY2Nlc3NQb2ludFJvd1tdPiB7XHJcbiAgY29uc3QgW3Jvd3NdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PEFjY2Vzc1BvaW50Um93W10+KFxyXG4gICAgYFNFTEVDVFxyXG4gICAgICBhcC5pZCxcclxuICAgICAgYXAuc3NpZCxcclxuICAgICAgYXAuYnRzX25hbWUsXHJcbiAgICAgIGFwLmlwX2FkZHJlc3MsXHJcbiAgICAgIGFwLmRldmljZSxcclxuICAgICAgYXAudXNlcm5hbWUsXHJcbiAgICAgIGFwLnBhc3N3b3JkLFxyXG4gICAgICBhcC5zZWN1cml0eSxcclxuICAgICAgYXAucGhyYXNlX2tleSxcclxuICAgICAgYXAuZnJlcXVlbmN5LFxyXG4gICAgICBhcC5jaGFubmVsX3dpZHRoLFxyXG4gICAgICBhcC5tYWNfYWRkcmVzcyxcclxuICAgICAgYXAucm91dGVyX2lkLFxyXG4gICAgICByLm5hbWUgQVMgcm91dGVyX25hbWVcclxuICAgIEZST00gYWNjZXNzX3BvaW50cyBhcFxyXG4gICAgTEVGVCBKT0lOIHJvdXRlcnMgciBPTiByLmlkID0gYXAucm91dGVyX2lkXHJcbiAgICBPUkRFUiBCWVxyXG4gICAgICAoYXAuYnRzX25hbWUgSVMgTlVMTCBPUiBhcC5idHNfbmFtZSA9ICcnKSxcclxuICAgICAgYXAuYnRzX25hbWUgQVNDLFxyXG4gICAgICBhcC5zc2lkIEFTQ2BcclxuICApO1xyXG5cclxuICByZXR1cm4gcm93cztcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgUGVuZGluZ0l0ZW1Sb3cgPSBSb3dEYXRhUGFja2V0ICYge1xyXG4gIGlkOiBudW1iZXI7XHJcbiAgY3VzdG9tZXJfbmFtZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgYWRkcmVzczogc3RyaW5nO1xyXG4gIGthYnVwYXRlbjogc3RyaW5nO1xyXG4gIGNyZWF0ZWRfYXQ6IERhdGU7XHJcbn07XHJcblxyXG5jb25zdCBXSUJfVElNRVpPTkUgPSBcIkFzaWEvSmFrYXJ0YVwiO1xyXG5jb25zdCBPTkVfREFZX01TID0gMjQgKiA2MCAqIDYwICogMTAwMDtcclxuXHJcbmZ1bmN0aW9uIGZvcm1hdERhdGVUb015U1FMKHRpbWV6b25lOiBzdHJpbmcsIGRhdGUgPSBuZXcgRGF0ZSgpKTogc3RyaW5nIHtcclxuICBjb25zdCBmb3JtYXR0ZXIgPSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChcInN2LVNFXCIsIHtcclxuICAgIHRpbWVab25lOiB0aW1lem9uZSxcclxuICAgIHllYXI6IFwibnVtZXJpY1wiLFxyXG4gICAgbW9udGg6IFwiMi1kaWdpdFwiLFxyXG4gICAgZGF5OiBcIjItZGlnaXRcIixcclxuICAgIGhvdXI6IFwiMi1kaWdpdFwiLFxyXG4gICAgbWludXRlOiBcIjItZGlnaXRcIixcclxuICAgIHNlY29uZDogXCIyLWRpZ2l0XCIsXHJcbiAgICBob3VyMTI6IGZhbHNlLFxyXG4gIH0pO1xyXG4gIGNvbnN0IHBhcnRzID0gZm9ybWF0dGVyLmZvcm1hdFRvUGFydHMoZGF0ZSkucmVkdWNlPFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KChhY2MsIHBhcnQpID0+IHtcclxuICAgIGlmIChwYXJ0LnR5cGUgIT09IFwibGl0ZXJhbFwiKSB7XHJcbiAgICAgIGFjY1twYXJ0LnR5cGVdID0gcGFydC52YWx1ZS5wYWRTdGFydChwYXJ0LnR5cGUgPT09IFwiZGF5XCIgfHwgcGFydC50eXBlID09PSBcIm1vbnRoXCIgfHwgcGFydC50eXBlID09PSBcImhvdXJcIiB8fCBwYXJ0LnR5cGUgPT09IFwibWludXRlXCIgfHwgcGFydC50eXBlID09PSBcInNlY29uZFwiID8gMiA6IDAsIFwiMFwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBhY2M7XHJcbiAgfSwge30pO1xyXG5cclxuICByZXR1cm4gYCR7cGFydHMueWVhcn0tJHtwYXJ0cy5tb250aH0tJHtwYXJ0cy5kYXl9ICR7cGFydHMuaG91ciA/PyBcIjAwXCJ9OiR7cGFydHMubWludXRlID8/IFwiMDBcIn06JHtwYXJ0cy5zZWNvbmQgPz8gXCIwMFwifWA7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFBlbmRpbmdJdGVtcygpOiBQcm9taXNlPFBlbmRpbmdJdGVtUm93W10+IHtcclxuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gIGNvbnN0IHRocmVzaG9sZERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0VGltZSgpIC0gT05FX0RBWV9NUyk7XHJcbiAgY29uc3QgdGhyZXNob2xkID0gZm9ybWF0RGF0ZVRvTXlTUUwoV0lCX1RJTUVaT05FLCB0aHJlc2hvbGREYXRlKTtcclxuXHJcbiAgYXdhaXQgbXlzcWxQb29sLnF1ZXJ5KFwiREVMRVRFIEZST00gcGVuZGluZ19saXN0IFdIRVJFIGNyZWF0ZWRfYXQgPCA/XCIsIFt0aHJlc2hvbGRdKTtcclxuXHJcbiAgY29uc3QgW3Jvd3NdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PFBlbmRpbmdJdGVtUm93W10+KFxyXG4gICAgYFNFTEVDVCBpZCwgY3VzdG9tZXJfbmFtZSwgZGVzY3JpcHRpb24sIGFkZHJlc3MsIGthYnVwYXRlbiwgY3JlYXRlZF9hdFxyXG4gICAgIEZST00gcGVuZGluZ19saXN0XHJcbiAgICAgV0hFUkUgY3JlYXRlZF9hdCA+PSA/XHJcbiAgICAgT1JERVIgQlkgY3JlYXRlZF9hdCBERVNDYCxcclxuICAgIFt0aHJlc2hvbGRdLFxyXG4gICk7XHJcblxyXG4gIHJldHVybiByb3dzO1xyXG59XHJcblxyXG50eXBlIFBlbmRpbmdQYXlsb2FkID0ge1xyXG4gIGN1c3RvbWVyTmFtZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgYWRkcmVzczogc3RyaW5nO1xyXG4gIGthYnVwYXRlbjogc3RyaW5nO1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVBlbmRpbmdJdGVtKHBheWxvYWQ6IFBlbmRpbmdQYXlsb2FkKTogUHJvbWlzZTxudW1iZXI+IHtcclxuICBjb25zdCBjcmVhdGVkQXQgPSBmb3JtYXREYXRlVG9NeVNRTChXSUJfVElNRVpPTkUpO1xyXG4gIGNvbnN0IFtyZXN1bHRdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PG15c3FsLlJlc3VsdFNldEhlYWRlcj4oXHJcbiAgICBgSU5TRVJUIElOVE8gcGVuZGluZ19saXN0IChjdXN0b21lcl9uYW1lLCBkZXNjcmlwdGlvbiwgYWRkcmVzcywga2FidXBhdGVuLCBjcmVhdGVkX2F0KVxyXG4gICAgIFZBTFVFUyAoPywgPywgPywgPywgPylgLFxyXG4gICAgW3BheWxvYWQuY3VzdG9tZXJOYW1lLCBwYXlsb2FkLmRlc2NyaXB0aW9uLCBwYXlsb2FkLmFkZHJlc3MsIHBheWxvYWQua2FidXBhdGVuLCBjcmVhdGVkQXRdLFxyXG4gICk7XHJcblxyXG4gIHJldHVybiByZXN1bHQuaW5zZXJ0SWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVQZW5kaW5nSXRlbShpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgYXdhaXQgbXlzcWxQb29sLnF1ZXJ5KFwiREVMRVRFIEZST00gcGVuZGluZ19saXN0IFdIRVJFIGlkID0gP1wiLCBbaWRdKTtcclxufVxyXG5cclxudHlwZSBBZG1pblVzZXJSb3cgPSBSb3dEYXRhUGFja2V0ICYge1xyXG4gIGlkOiBudW1iZXI7XHJcbiAgdXNlcm5hbWU6IHN0cmluZztcclxuICBwYXNzd29yZDogc3RyaW5nIHwgbnVsbDtcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBZG1pbkNyZWRlbnRpYWxzKHVzZXJuYW1lOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPHsgaWQ6IG51bWJlcjsgdXNlcm5hbWU6IHN0cmluZyB9IHwgbnVsbD4ge1xyXG4gIGNvbnN0IFtyb3dzXSA9IGF3YWl0IG15c3FsUG9vbC5xdWVyeTxBZG1pblVzZXJSb3dbXT4oXHJcbiAgICBcIlNFTEVDVCBpZCwgdXNlcm5hbWUsIHBhc3N3b3JkIEZST00gYWRtaW5fdXNlcnMgV0hFUkUgdXNlcm5hbWUgPSA/IExJTUlUIDFcIixcclxuICAgIFt1c2VybmFtZV0sXHJcbiAgKTtcclxuXHJcbiAgaWYgKCFyb3dzLmxlbmd0aCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBjb25zdCBzdG9yZWQgPSByb3dzWzBdLnBhc3N3b3JkID8/IFwiXCI7XHJcbiAgaWYgKCFzdG9yZWQpIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgY2FuZGlkYXRlczogc3RyaW5nW10gPSBbcGFzc3dvcmRdO1xyXG5cclxuICBpZiAoL15bYS1mMC05XXs2NH0kL2kudGVzdChzdG9yZWQpKSB7XHJcbiAgICBjYW5kaWRhdGVzLnB1c2goaGFzaFdpdGhBbGdvcml0aG0oJ3NoYTI1NicsIHBhc3N3b3JkKSk7XHJcbiAgfVxyXG4gIGlmICgvXlthLWYwLTldezMyfSQvaS50ZXN0KHN0b3JlZCkpIHtcclxuICAgIGNhbmRpZGF0ZXMucHVzaChoYXNoV2l0aEFsZ29yaXRobSgnbWQ1JywgcGFzc3dvcmQpKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGlzTWF0Y2ggPSBjYW5kaWRhdGVzLnNvbWUoKGNhbmRpZGF0ZSkgPT4gdGltaW5nU2FmZUNvbXBhcmUoc3RvcmVkLCBjYW5kaWRhdGUpKTtcclxuICBpZiAoIWlzTWF0Y2gpIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHsgaWQ6IHJvd3NbMF0uaWQsIHVzZXJuYW1lOiByb3dzWzBdLnVzZXJuYW1lIH07XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIENsaWVudFJvdyA9IFJvd0RhdGFQYWNrZXQgJiB7XHJcbiAgaWQ6IG51bWJlcjtcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIGlwX2FkZHJlc3M6IHN0cmluZyB8IG51bGw7XHJcbiAgdHlwZTogc3RyaW5nIHwgbnVsbDtcclxuICBzdGF0dXM6IHN0cmluZyB8IG51bGw7XHJcbiAgcHJvZmlsZTogc3RyaW5nIHwgbnVsbDtcclxuICBwcm9maWxlX2FzbGk6IHN0cmluZyB8IG51bGw7XHJcbiAgY29tbWVudDogc3RyaW5nIHwgbnVsbDtcclxuICByb3V0ZXJfaWQ6IG51bWJlciB8IG51bGw7XHJcbiAgcm91dGVyX25hbWU6IHN0cmluZyB8IG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBGZXRjaENsaWVudHNPcHRpb25zID0ge1xyXG4gIHBhZ2U/OiBudW1iZXI7XHJcbiAgcGFnZVNpemU/OiBudW1iZXI7XHJcbiAgc2VhcmNoPzogc3RyaW5nO1xyXG4gIHJvdXRlcklkPzogbnVtYmVyIHwgbnVsbDtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIEZldGNoQ2xpZW50c1Jlc3BvbnNlID0ge1xyXG4gIGl0ZW1zOiBDbGllbnRSb3dbXTtcclxuICBwYWdlOiBudW1iZXI7XHJcbiAgcGFnZVNpemU6IG51bWJlcjtcclxuICB0b3RhbEl0ZW1zOiBudW1iZXI7XHJcbiAgdG90YWxQYWdlczogbnVtYmVyO1xyXG4gIHNlYXJjaDogc3RyaW5nO1xyXG4gIHJvdXRlcklkOiBudW1iZXIgfCBudWxsO1xyXG59O1xyXG5cclxuY29uc3QgREVGQVVMVF9DTElFTlRfUEFHRV9TSVpFID0gMjE7XHJcbmNvbnN0IE1BWF9DTElFTlRfUEFHRV9TSVpFID0gMjAwO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoQ2xpZW50cyhvcHRpb25zOiBGZXRjaENsaWVudHNPcHRpb25zID0ge30pOiBQcm9taXNlPEZldGNoQ2xpZW50c1Jlc3BvbnNlPiB7XHJcbiAgY29uc3QgcmF3UGFnZSA9IE51bWJlci5pc0Zpbml0ZShvcHRpb25zLnBhZ2UpID8gTnVtYmVyKG9wdGlvbnMucGFnZSkgOiAxO1xyXG4gIGNvbnN0IHJhd1BhZ2VTaXplID0gTnVtYmVyLmlzRmluaXRlKG9wdGlvbnMucGFnZVNpemUpID8gTnVtYmVyKG9wdGlvbnMucGFnZVNpemUpIDogREVGQVVMVF9DTElFTlRfUEFHRV9TSVpFO1xyXG4gIGNvbnN0IHBhZ2VTaXplID0gTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5mbG9vcihyYXdQYWdlU2l6ZSkgfHwgREVGQVVMVF9DTElFTlRfUEFHRV9TSVpFLCAxKSwgTUFYX0NMSUVOVF9QQUdFX1NJWkUpO1xyXG4gIGNvbnN0IHNlYXJjaFRlcm0gPSAob3B0aW9ucy5zZWFyY2ggPz8gXCJcIikudHJpbSgpO1xyXG4gIGNvbnN0IHJhd1JvdXRlcklkID0gTnVtYmVyLmlzRmluaXRlKG9wdGlvbnMucm91dGVySWQpID8gTnVtYmVyKG9wdGlvbnMucm91dGVySWQpIDogbnVsbDtcclxuICBjb25zdCByb3V0ZXJJZCA9IHJhd1JvdXRlcklkICYmIHJhd1JvdXRlcklkID4gMCA/IHJhd1JvdXRlcklkIDogbnVsbDtcclxuXHJcbiAgY29uc3QgbGlrZVRlcm0gPSBzZWFyY2hUZXJtID8gYCUke3NlYXJjaFRlcm0ucmVwbGFjZSgvXFxzKy9nLCBcIiVcIil9JWAgOiBudWxsO1xyXG4gIGNvbnN0IHNlYXJjaFBhcmFtczogc3RyaW5nW10gPSBsaWtlVGVybVxyXG4gICAgPyBbbGlrZVRlcm0sIGxpa2VUZXJtLCBsaWtlVGVybSwgbGlrZVRlcm0sIGxpa2VUZXJtLCBsaWtlVGVybSwgbGlrZVRlcm1dXHJcbiAgICA6IFtdO1xyXG5cclxuICBjb25zdCB3aGVyZVBhcnRzOiBzdHJpbmdbXSA9IFtdO1xyXG4gIGNvbnN0IHdoZXJlUGFyYW1zOiBBcnJheTxzdHJpbmcgfCBudW1iZXI+ID0gW107XHJcblxyXG4gIGlmIChsaWtlVGVybSkge1xyXG4gICAgd2hlcmVQYXJ0cy5wdXNoKGAoXHJcbiAgICAgIHUudXNlcm5hbWUgTElLRSA/XHJcbiAgICAgIE9SIHUuaXBfYWRkcmVzcyBMSUtFID9cclxuICAgICAgT1IgdS50eXBlIExJS0UgP1xyXG4gICAgICBPUiB1LnN0YXR1cyBMSUtFID9cclxuICAgICAgT1IgdS5wcm9maWxlIExJS0UgP1xyXG4gICAgICBPUiB1LmNvbW1lbnQgTElLRSA/XHJcbiAgICAgIE9SIHIubmFtZSBMSUtFID9cclxuICAgIClgKTtcclxuICAgIHdoZXJlUGFyYW1zLnB1c2goLi4uc2VhcmNoUGFyYW1zKTtcclxuICB9XHJcblxyXG4gIGlmIChyb3V0ZXJJZCAhPT0gbnVsbCkge1xyXG4gICAgd2hlcmVQYXJ0cy5wdXNoKFwidS5yb3V0ZXJfaWQgPSA/XCIpO1xyXG4gICAgd2hlcmVQYXJhbXMucHVzaChyb3V0ZXJJZCk7XHJcbiAgfVxyXG5cclxuICBjb25zdCB3aGVyZUNsYXVzZSA9IHdoZXJlUGFydHMubGVuZ3RoID4gMCA/IGBXSEVSRSAke3doZXJlUGFydHMuam9pbihcIiBBTkQgXCIpfWAgOiBcIlwiO1xyXG5cclxuICBjb25zdCBbY291bnRSb3dzXSA9IGF3YWl0IG15c3FsUG9vbC5xdWVyeTxBcnJheTx7IHRvdGFsOiBudW1iZXIgfT4gJiBSb3dEYXRhUGFja2V0W10+KFxyXG4gICAgYFNFTEVDVCBDT1VOVCgqKSBBUyB0b3RhbFxyXG4gICAgIEZST00gdXNlcnMgdVxyXG4gICAgIExFRlQgSk9JTiByb3V0ZXJzIHIgT04gci5pZCA9IHUucm91dGVyX2lkXHJcbiAgICAgJHt3aGVyZUNsYXVzZX1gLFxyXG4gICAgd2hlcmVQYXJhbXMsXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgdG90YWxJdGVtcyA9IGNvdW50Um93c1swXT8udG90YWwgPz8gMDtcclxuICBjb25zdCB0b3RhbFBhZ2VzID0gdG90YWxJdGVtcyA9PT0gMCA/IDAgOiBNYXRoLmNlaWwodG90YWxJdGVtcyAvIHBhZ2VTaXplKTtcclxuICBjb25zdCBzYWZlUGFnZSA9IHRvdGFsUGFnZXMgPT09IDAgPyAxIDogTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5mbG9vcihyYXdQYWdlKSB8fCAxLCAxKSwgdG90YWxQYWdlcyk7XHJcbiAgY29uc3Qgb2Zmc2V0ID0gKHNhZmVQYWdlIC0gMSkgKiBwYWdlU2l6ZTtcclxuXHJcbiAgY29uc3QgW3Jvd3NdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PENsaWVudFJvd1tdPihcclxuICAgIGBTRUxFQ1RcclxuICAgICAgdS5pZCxcclxuICAgICAgdS51c2VybmFtZSxcclxuICAgICAgdS5pcF9hZGRyZXNzLFxyXG4gICAgICB1LnR5cGUsXHJcbiAgICAgIHUuc3RhdHVzLFxyXG4gICAgICB1LnByb2ZpbGUsXHJcbiAgICAgIHUuY29tbWVudCxcclxuICAgICAgdS5yb3V0ZXJfaWQsXHJcbiAgICAgIHUucHJvZmlsZV9hc2xpLFxyXG4gICAgICAgci5uYW1lIEFTIHJvdXRlcl9uYW1lXHJcbiAgICBGUk9NIHVzZXJzIHVcclxuICAgIExFRlQgSk9JTiByb3V0ZXJzIHIgT04gci5pZCA9IHUucm91dGVyX2lkXHJcbiAgICAke3doZXJlQ2xhdXNlfVxyXG4gICAgT1JERVIgQlkgdS51cGRhdGVkX2F0IERFU0MsIHUudXNlcm5hbWUgQVNDXHJcbiAgICBMSU1JVCA/XHJcbiAgICBPRkZTRVQgP2AsXHJcbiAgICBbLi4ud2hlcmVQYXJhbXMsIHBhZ2VTaXplLCBvZmZzZXRdLFxyXG4gICk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBpdGVtczogcm93cyxcclxuICAgIHBhZ2U6IHNhZmVQYWdlLFxyXG4gICAgcGFnZVNpemUsXHJcbiAgICB0b3RhbEl0ZW1zLFxyXG4gICAgdG90YWxQYWdlcyxcclxuICAgIHNlYXJjaDogc2VhcmNoVGVybSxcclxuICAgIHJvdXRlcklkLFxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVDbGllbnRTdGF0dXMoaWQ6IG51bWJlciwgc3RhdHVzOiBcImFrdGlmXCIgfCBcIm5vbmFrdGlmXCIpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCBbcm93c10gPSBhd2FpdCBteXNxbFBvb2wucXVlcnk8KFJvd0RhdGFQYWNrZXQgJiB7IHR5cGU6IHN0cmluZyB8IG51bGw7IHByb2ZpbGU6IHN0cmluZyB8IG51bGw7IHByb2ZpbGVfYXNsaTogc3RyaW5nIHwgbnVsbCB9KVtdPihcclxuICAgIGBTRUxFQ1QgdHlwZSwgcHJvZmlsZSwgcHJvZmlsZV9hc2xpIEZST00gdXNlcnMgV0hFUkUgaWQgPSA/IExJTUlUIDFgLFxyXG4gICAgW2lkXSxcclxuICApO1xyXG5cclxuICBpZiAoIXJvd3MubGVuZ3RoKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDbGllbnQgdGlkYWsgZGl0ZW11a2FuLlwiKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHJvdyA9IHJvd3NbMF07XHJcbiAgY29uc3QgY3VycmVudFByb2ZpbGUgPSByb3cucHJvZmlsZSA/PyBudWxsO1xyXG4gIGNvbnN0IHN0b3JlZE9yaWdpbmFsUHJvZmlsZSA9IHJvdy5wcm9maWxlX2FzbGk/LnRyaW0oKSA/IHJvdy5wcm9maWxlX2FzbGkgOiBudWxsO1xyXG4gIGNvbnN0IHR5cGUgPSByb3cudHlwZT8udHJpbSgpLnRvTG93ZXJDYXNlKCkgPz8gbnVsbDtcclxuXHJcbiAgaWYgKHN0YXR1cyA9PT0gXCJub25ha3RpZlwiKSB7XHJcbiAgICBjb25zdCBvcmlnaW5hbFByb2ZpbGUgPSBzdG9yZWRPcmlnaW5hbFByb2ZpbGUgPz8gY3VycmVudFByb2ZpbGUgPz8gbnVsbDtcclxuICAgIGF3YWl0IG15c3FsUG9vbC5xdWVyeShcclxuICAgICAgYFVQREFURSB1c2Vyc1xyXG4gICAgICAgU0VUXHJcbiAgICAgICAgIHN0YXR1cyA9ICdub25ha3RpZicsXHJcbiAgICAgICAgIHByb2ZpbGVfYXNsaSA9IENPQUxFU0NFKE5VTExJRihwcm9maWxlX2FzbGksICcnKSwgPyksXHJcbiAgICAgICAgIHByb2ZpbGUgPSAnaXNvbGlyJyxcclxuICAgICAgICAgbWFudWFsX292ZXJyaWRlID0gMSxcclxuICAgICAgICAgdXBkYXRlZF9hdCA9IE5PVygpXHJcbiAgICAgICBXSEVSRSBpZCA9ID9gLFxyXG4gICAgICBbb3JpZ2luYWxQcm9maWxlLCBpZF0sXHJcbiAgICApO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb25zdCBuZXh0UHJvZmlsZSA9XHJcbiAgICAgIHR5cGUgPT09IFwicHBwb2VcIlxyXG4gICAgICAgID8gc3RvcmVkT3JpZ2luYWxQcm9maWxlID8/IFwibm9ybWFsXCJcclxuICAgICAgICA6IFwibm9ybWFsXCI7XHJcblxyXG4gICAgYXdhaXQgbXlzcWxQb29sLnF1ZXJ5KFxyXG4gICAgICBgVVBEQVRFIHVzZXJzXHJcbiAgICAgICBTRVRcclxuICAgICAgICAgc3RhdHVzID0gJ2FrdGlmJyxcclxuICAgICAgICAgcHJvZmlsZSA9ID8sXHJcbiAgICAgICAgIG1hbnVhbF9vdmVycmlkZSA9IDEsXHJcbiAgICAgICAgIHVwZGF0ZWRfYXQgPSBOT1coKVxyXG4gICAgICAgV0hFUkUgaWQgPSA/YCxcclxuICAgICAgW25leHRQcm9maWxlLCBpZF0sXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHR5cGUgQ3JlYXRlQ2xpZW50UGF5bG9hZCA9IHtcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIGlwQWRkcmVzcz86IHN0cmluZyB8IG51bGw7XHJcbiAgdHlwZT86IHN0cmluZyB8IG51bGw7XHJcbiAgc3RhdHVzPzogXCJha3RpZlwiIHwgXCJub25ha3RpZlwiO1xyXG4gIHByb2ZpbGU/OiBzdHJpbmcgfCBudWxsO1xyXG4gIGNvbW1lbnQ/OiBzdHJpbmcgfCBudWxsO1xyXG4gIHJvdXRlcklkPzogbnVtYmVyIHwgbnVsbDtcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDbGllbnQocGF5bG9hZDogQ3JlYXRlQ2xpZW50UGF5bG9hZCk6IFByb21pc2U8bnVtYmVyPiB7XHJcbiAgY29uc3QgdXNlcm5hbWUgPSBwYXlsb2FkLnVzZXJuYW1lPy50cmltKCkgPz8gXCJcIjtcclxuICBpZiAoIXVzZXJuYW1lKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVc2VybmFtZSB3YWppYiBkaWlzaS5cIik7XHJcbiAgfVxyXG5cclxuICBjb25zdCBpcEFkZHJlc3MgPSBwYXlsb2FkLmlwQWRkcmVzcz8udHJpbSgpIHx8IG51bGw7XHJcbiAgY29uc3QgcmF3VHlwZSA9IHBheWxvYWQudHlwZT8udHJpbSgpIHx8IG51bGw7XHJcbiAgY29uc3QgdHlwZSA9IHJhd1R5cGUgPyByYXdUeXBlLnRvTG93ZXJDYXNlKCkgOiBudWxsO1xyXG4gIGNvbnN0IHN0YXR1czogXCJha3RpZlwiIHwgXCJub25ha3RpZlwiID0gcGF5bG9hZC5zdGF0dXMgPT09IFwibm9uYWt0aWZcIiA/IFwibm9uYWt0aWZcIiA6IFwiYWt0aWZcIjtcclxuICBjb25zdCBjb21tZW50ID0gcGF5bG9hZC5jb21tZW50Py50cmltKCkgfHwgbnVsbDtcclxuXHJcbiAgY29uc3QgbnVtZXJpY1JvdXRlcklkID1cclxuICAgIHR5cGVvZiBwYXlsb2FkLnJvdXRlcklkID09PSBcIm51bWJlclwiICYmIE51bWJlci5pc0Zpbml0ZShwYXlsb2FkLnJvdXRlcklkKSAmJiBwYXlsb2FkLnJvdXRlcklkID4gMFxyXG4gICAgICA/IE1hdGguZmxvb3IocGF5bG9hZC5yb3V0ZXJJZClcclxuICAgICAgOiBudWxsO1xyXG5cclxuICBjb25zdCBiYXNlUHJvZmlsZSA9IHBheWxvYWQucHJvZmlsZT8udHJpbSgpIHx8ICh0eXBlID09PSBcInBwcG9lXCIgPyBcIm5vcm1hbFwiIDogbnVsbCk7XHJcbiAgY29uc3QgcHJvZmlsZSA9IHN0YXR1cyA9PT0gXCJub25ha3RpZlwiID8gXCJpc29saXJcIiA6IGJhc2VQcm9maWxlO1xyXG4gIGNvbnN0IHByb2ZpbGVBc2xpID0gYmFzZVByb2ZpbGU7XHJcblxyXG4gIGNvbnN0IFtyZXN1bHRdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PG15c3FsLlJlc3VsdFNldEhlYWRlcj4oXHJcbiAgICBgSU5TRVJUIElOVE8gdXNlcnMgKFxyXG4gICAgICB1c2VybmFtZSxcclxuICAgICAgaXBfYWRkcmVzcyxcclxuICAgICAgdHlwZSxcclxuICAgICAgc3RhdHVzLFxyXG4gICAgICBwcm9maWxlLFxyXG4gICAgICBwcm9maWxlX2FzbGksXHJcbiAgICAgIGNvbW1lbnQsXHJcbiAgICAgIHJvdXRlcl9pZCxcclxuICAgICAgbWFudWFsX292ZXJyaWRlLFxyXG4gICAgICBjcmVhdGVkX2F0LFxyXG4gICAgICB1cGRhdGVkX2F0XHJcbiAgICApXHJcbiAgICBWQUxVRVMgKD8sID8sID8sID8sID8sID8sID8sID8sIDEsIE5PVygpLCBOT1coKSlgLFxyXG4gICAgW3VzZXJuYW1lLCBpcEFkZHJlc3MsIHR5cGUsIHN0YXR1cywgcHJvZmlsZSwgcHJvZmlsZUFzbGksIGNvbW1lbnQsIG51bWVyaWNSb3V0ZXJJZF0sXHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIHJlc3VsdC5pbnNlcnRJZDtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgQ3JlYXRlQWt0aXZhc2lDbGllbnRQYXlsb2FkID0ge1xyXG4gIG5hbWFQZWxhbmdnYW46IHN0cmluZztcclxuICBuYW1hTGF5YW5hbjogc3RyaW5nO1xyXG4gIGthcGFzaXRhc0xheWFuYW46IHN0cmluZztcclxuICB2bGFuSWQ6IHN0cmluZztcclxuICBuYW1hTWV0cm86IHN0cmluZztcclxuICBzaXRlTWV0cm86IHN0cmluZztcclxuICBrYXBhc2l0YXNNZXRybzogc3RyaW5nO1xyXG4gIGlwQWRkcmVzczogc3RyaW5nO1xyXG4gIGlwR2F0ZXdheTogc3RyaW5nO1xyXG4gIHJvdXRlckdhdGV3YXk6IHN0cmluZztcclxuICBjcmVhdGVkQnk6IHN0cmluZztcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVBa3RpdmFzaUNsaWVudChwYXlsb2FkOiBDcmVhdGVBa3RpdmFzaUNsaWVudFBheWxvYWQpOiBQcm9taXNlPG51bWJlcj4ge1xyXG4gIGNvbnN0IFtyZXN1bHRdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PG15c3FsLlJlc3VsdFNldEhlYWRlcj4oXHJcbiAgICBgSU5TRVJUIElOVE8gYWt0aXZhc2lfY2xpZW50cyAoXHJcbiAgICAgIG5hbWFfcGVsYW5nZ2FuLFxyXG4gICAgICBuYW1hX2xheWFuYW4sXHJcbiAgICAgIGthcGFzaXRhc19sYXlhbmFuLFxyXG4gICAgICB2bGFuX2lkLFxyXG4gICAgICBuYW1hX21ldHJvLFxyXG4gICAgICBzaXRlX21ldHJvLFxyXG4gICAgICBrYXBhc2l0YXNfbWV0cm8sXHJcbiAgICAgIGlwX2FkZHJlc3MsXHJcbiAgICAgIGlwX2dhdGV3YXksXHJcbiAgICAgIHJvdXRlcl9nYXRld2F5LFxyXG4gICAgICBjcmVhdGVkX2J5LFxyXG4gICAgICBjcmVhdGVkX2F0LFxyXG4gICAgICB1cGRhdGVkX2F0XHJcbiAgICApXHJcbiAgICBWQUxVRVMgKD8sID8sID8sID8sID8sID8sID8sID8sID8sID8sID8sIE5PVygpLCBOT1coKSlgLFxyXG4gICAgW1xyXG4gICAgICBwYXlsb2FkLm5hbWFQZWxhbmdnYW4udHJpbSgpLFxyXG4gICAgICBwYXlsb2FkLm5hbWFMYXlhbmFuLnRyaW0oKSxcclxuICAgICAgcGF5bG9hZC5rYXBhc2l0YXNMYXlhbmFuLnRyaW0oKSxcclxuICAgICAgcGF5bG9hZC52bGFuSWQudHJpbSgpLFxyXG4gICAgICBwYXlsb2FkLm5hbWFNZXRyby50cmltKCksXHJcbiAgICAgIHBheWxvYWQuc2l0ZU1ldHJvLnRyaW0oKSxcclxuICAgICAgcGF5bG9hZC5rYXBhc2l0YXNNZXRyby50cmltKCksXHJcbiAgICAgIHBheWxvYWQuaXBBZGRyZXNzLnRyaW0oKSxcclxuICAgICAgcGF5bG9hZC5pcEdhdGV3YXkudHJpbSgpLFxyXG4gICAgICBwYXlsb2FkLnJvdXRlckdhdGV3YXkudHJpbSgpLFxyXG4gICAgICBwYXlsb2FkLmNyZWF0ZWRCeS50cmltKCksXHJcbiAgICBdLFxyXG4gICk7XHJcblxyXG4gIHJldHVybiByZXN1bHQuaW5zZXJ0SWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVDbGllbnQoaWQ6IG51bWJlciwgcGF5bG9hZDogVXBkYXRlQ2xpZW50UGF5bG9hZCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmICghTnVtYmVyLmlzRmluaXRlKGlkKSB8fCBpZCA8PSAwKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJRCBjbGllbnQgdGlkYWsgdmFsaWQuXCIpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgW3Jvd3NdID0gYXdhaXQgbXlzcWxQb29sLnF1ZXJ5PFxyXG4gICAgQXJyYXk8XHJcbiAgICAgIFJvd0RhdGFQYWNrZXQgJiB7XHJcbiAgICAgICAgdXNlcm5hbWU6IHN0cmluZztcclxuICAgICAgICBpcF9hZGRyZXNzOiBzdHJpbmcgfCBudWxsO1xyXG4gICAgICAgIHR5cGU6IHN0cmluZyB8IG51bGw7XHJcbiAgICAgICAgc3RhdHVzOiBzdHJpbmcgfCBudWxsO1xyXG4gICAgICAgIHByb2ZpbGU6IHN0cmluZyB8IG51bGw7XHJcbiAgICAgICAgcHJvZmlsZV9hc2xpOiBzdHJpbmcgfCBudWxsO1xyXG4gICAgICAgIGNvbW1lbnQ6IHN0cmluZyB8IG51bGw7XHJcbiAgICAgICAgcm91dGVyX2lkOiBudW1iZXIgfCBudWxsO1xyXG4gICAgICB9XHJcbiAgICA+XHJcbiAgPihcclxuICAgIGBTRUxFQ1QgdXNlcm5hbWUsIGlwX2FkZHJlc3MsIHR5cGUsIHN0YXR1cywgcHJvZmlsZSwgcHJvZmlsZV9hc2xpLCBjb21tZW50LCByb3V0ZXJfaWRcclxuICAgICBGUk9NIHVzZXJzXHJcbiAgICAgV0hFUkUgaWQgPSA/XHJcbiAgICAgTElNSVQgMWAsXHJcbiAgICBbaWRdLFxyXG4gICk7XHJcblxyXG4gIGlmICghcm93cy5sZW5ndGgpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNsaWVudCB0aWRhayBkaXRlbXVrYW4uXCIpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZXhpc3RpbmcgPSByb3dzWzBdO1xyXG5cclxuICBjb25zdCB1c2VybmFtZVJhdyA9IHBheWxvYWQudXNlcm5hbWUgIT09IHVuZGVmaW5lZCA/IHBheWxvYWQudXNlcm5hbWUgOiBleGlzdGluZy51c2VybmFtZTtcclxuICBjb25zdCB1c2VybmFtZSA9IHVzZXJuYW1lUmF3Py50cmltKCk7XHJcbiAgaWYgKCF1c2VybmFtZSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlcm5hbWUgd2FqaWIgZGlpc2kuXCIpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaXBSYXcgPSBwYXlsb2FkLmlwQWRkcmVzcyAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZC5pcEFkZHJlc3MgOiBleGlzdGluZy5pcF9hZGRyZXNzO1xyXG4gIGNvbnN0IGlwQWRkcmVzcyA9IGlwUmF3ID8gaXBSYXcudHJpbSgpIDogbnVsbDtcclxuXHJcbiAgY29uc3QgdHlwZVJhdyA9IHBheWxvYWQudHlwZSAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZC50eXBlIDogZXhpc3RpbmcudHlwZTtcclxuICBjb25zdCB0eXBlID0gdHlwZVJhdyA/IHR5cGVSYXcudHJpbSgpLnRvTG93ZXJDYXNlKCkgfHwgbnVsbCA6IG51bGw7XHJcblxyXG4gIGNvbnN0IGNvbW1lbnRSYXcgPSBwYXlsb2FkLmNvbW1lbnQgIT09IHVuZGVmaW5lZCA/IHBheWxvYWQuY29tbWVudCA6IGV4aXN0aW5nLmNvbW1lbnQ7XHJcbiAgY29uc3QgY29tbWVudCA9IGNvbW1lbnRSYXcgPyBjb21tZW50UmF3LnRyaW0oKSA6IG51bGw7XHJcblxyXG4gIGNvbnN0IHJvdXRlclZhbHVlID0gcGF5bG9hZC5yb3V0ZXJJZCAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZC5yb3V0ZXJJZCA6IGV4aXN0aW5nLnJvdXRlcl9pZDtcclxuICBjb25zdCByb3V0ZXJJZCA9XHJcbiAgICB0eXBlb2Ygcm91dGVyVmFsdWUgPT09IFwibnVtYmVyXCIgJiYgTnVtYmVyLmlzRmluaXRlKHJvdXRlclZhbHVlKSAmJiByb3V0ZXJWYWx1ZSA+IDBcclxuICAgICAgPyBNYXRoLmZsb29yKHJvdXRlclZhbHVlKVxyXG4gICAgICA6IG51bGw7XHJcblxyXG4gIGNvbnN0IHN0YXR1c0lucHV0ID0gcGF5bG9hZC5zdGF0dXMgPz8gKGV4aXN0aW5nLnN0YXR1cyA9PT0gXCJub25ha3RpZlwiID8gXCJub25ha3RpZlwiIDogXCJha3RpZlwiKTtcclxuICBjb25zdCBzdGF0dXM6IFwiYWt0aWZcIiB8IFwibm9uYWt0aWZcIiA9IHN0YXR1c0lucHV0ID09PSBcIm5vbmFrdGlmXCIgPyBcIm5vbmFrdGlmXCIgOiBcImFrdGlmXCI7XHJcblxyXG4gIGNvbnN0IHByb2ZpbGVJbnB1dFJhdyA9IHBheWxvYWQucHJvZmlsZSAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZC5wcm9maWxlIDogbnVsbDtcclxuICBjb25zdCBwcm9maWxlSW5wdXQgPSBwcm9maWxlSW5wdXRSYXcgPyBwcm9maWxlSW5wdXRSYXcudHJpbSgpIDogbnVsbDtcclxuXHJcbiAgY29uc3QgZXhpc3RpbmdQcm9maWxlID0gZXhpc3RpbmcucHJvZmlsZT8udHJpbSgpIHx8IG51bGw7XHJcbiAgY29uc3QgZXhpc3RpbmdQcm9maWxlQXNsaSA9IGV4aXN0aW5nLnByb2ZpbGVfYXNsaT8udHJpbSgpIHx8IG51bGw7XHJcblxyXG4gIGxldCBwcm9maWxlOiBzdHJpbmcgfCBudWxsID0gZXhpc3RpbmdQcm9maWxlO1xyXG4gIGxldCBwcm9maWxlQXNsaTogc3RyaW5nIHwgbnVsbCA9IGV4aXN0aW5nUHJvZmlsZUFzbGk7XHJcblxyXG4gIGlmIChzdGF0dXMgPT09IFwibm9uYWt0aWZcIikge1xyXG4gICAgY29uc3Qgb3JpZ2luYWxQcm9maWxlID1cclxuICAgICAgcHJvZmlsZUlucHV0ID8/XHJcbiAgICAgIHByb2ZpbGVBc2xpID8/XHJcbiAgICAgIGV4aXN0aW5nUHJvZmlsZSA/P1xyXG4gICAgICAodHlwZSA9PT0gXCJwcHBvZVwiID8gXCJub3JtYWxcIiA6IG51bGwpO1xyXG4gICAgcHJvZmlsZUFzbGkgPSBvcmlnaW5hbFByb2ZpbGU7XHJcbiAgICBwcm9maWxlID0gXCJpc29saXJcIjtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3QgYmFzZVByb2ZpbGUgPVxyXG4gICAgICBwcm9maWxlSW5wdXQgPz9cclxuICAgICAgcHJvZmlsZUFzbGkgPz9cclxuICAgICAgKGV4aXN0aW5nUHJvZmlsZSAhPT0gXCJpc29saXJcIiA/IGV4aXN0aW5nUHJvZmlsZSA6IG51bGwpID8/XHJcbiAgICAgICh0eXBlID09PSBcInBwcG9lXCIgPyBcIm5vcm1hbFwiIDogbnVsbCk7XHJcbiAgICBwcm9maWxlQXNsaSA9IGJhc2VQcm9maWxlO1xyXG4gICAgcHJvZmlsZSA9IGJhc2VQcm9maWxlO1xyXG4gIH1cclxuXHJcbiAgYXdhaXQgbXlzcWxQb29sLnF1ZXJ5KFxyXG4gICAgYFVQREFURSB1c2Vyc1xyXG4gICAgIFNFVFxyXG4gICAgICAgdXNlcm5hbWUgPSA/LFxyXG4gICAgICAgaXBfYWRkcmVzcyA9ID8sXHJcbiAgICAgICB0eXBlID0gPyxcclxuICAgICAgIHN0YXR1cyA9ID8sXHJcbiAgICAgICBwcm9maWxlID0gPyxcclxuICAgICAgIHByb2ZpbGVfYXNsaSA9ID8sXHJcbiAgICAgICBjb21tZW50ID0gPyxcclxuICAgICAgIHJvdXRlcl9pZCA9ID8sXHJcbiAgICAgICBtYW51YWxfb3ZlcnJpZGUgPSAxLFxyXG4gICAgICAgdXBkYXRlZF9hdCA9IE5PVygpXHJcbiAgICAgV0hFUkUgaWQgPSA/YCxcclxuICAgIFt1c2VybmFtZSwgaXBBZGRyZXNzLCB0eXBlLCBzdGF0dXMsIHByb2ZpbGUsIHByb2ZpbGVBc2xpLCBjb21tZW50LCByb3V0ZXJJZCwgaWRdLFxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVDbGllbnQoaWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmICghTnVtYmVyLmlzRmluaXRlKGlkKSB8fCBpZCA8PSAwKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJRCBjbGllbnQgdGlkYWsgdmFsaWQuXCIpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgW3Jlc3VsdF0gPSBhd2FpdCBteXNxbFBvb2wucXVlcnk8bXlzcWwuUmVzdWx0U2V0SGVhZGVyPihcIkRFTEVURSBGUk9NIHVzZXJzIFdIRVJFIGlkID0gP1wiLCBbaWRdKTtcclxuICBpZiAocmVzdWx0LmFmZmVjdGVkUm93cyA9PT0gMCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2xpZW50IHRpZGFrIGRpdGVtdWthbi5cIik7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gdGltaW5nU2FmZUNvbXBhcmUoYTogc3RyaW5nLCBiOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICBjb25zdCBidWZBID0gQnVmZmVyLmZyb20oYSB8fCBcIlwiKVxyXG4gIGNvbnN0IGJ1ZkIgPSBCdWZmZXIuZnJvbShiIHx8IFwiXCIpXHJcbiAgaWYgKGJ1ZkEubGVuZ3RoID09PSBidWZCLmxlbmd0aCkge1xyXG4gICAgcmV0dXJuIGNyeXB0by50aW1pbmdTYWZlRXF1YWwoYnVmQSwgYnVmQilcclxuICB9XHJcbiAgY29uc3QgbGVuID0gTWF0aC5tYXgoYnVmQS5sZW5ndGgsIGJ1ZkIubGVuZ3RoKVxyXG4gIGNvbnN0IHBhZGRlZEEgPSBCdWZmZXIuYWxsb2MobGVuKVxyXG4gIGNvbnN0IHBhZGRlZEIgPSBCdWZmZXIuYWxsb2MobGVuKVxyXG4gIGJ1ZkEuY29weShwYWRkZWRBKVxyXG4gIGJ1ZkIuY29weShwYWRkZWRCKVxyXG4gIHJldHVybiBjcnlwdG8udGltaW5nU2FmZUVxdWFsKHBhZGRlZEEsIHBhZGRlZEIpICYmIGEgPT09IGJcclxufVxyXG5cclxuZnVuY3Rpb24gaGFzaFdpdGhBbGdvcml0aG0oYWxnb3JpdGhtOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaChhbGdvcml0aG0pLnVwZGF0ZSh2YWx1ZSkuZGlnZXN0KFwiaGV4XCIpXHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFJvdXRlclJvdyA9IFJvd0RhdGFQYWNrZXQgJiB7XHJcbiAgaWQ6IG51bWJlcjtcclxuICBuYW1lOiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hSb3V0ZXJzKCk6IFByb21pc2U8Um91dGVyUm93W10+IHtcclxuICBjb25zdCBbcm93c10gPSBhd2FpdCBteXNxbFBvb2wucXVlcnk8Um91dGVyUm93W10+KFxyXG4gICAgXCJTRUxFQ1QgaWQsIG5hbWUgRlJPTSByb3V0ZXJzIE9SREVSIEJZIG5hbWUgQVNDXCIsXHJcbiAgKTtcclxuICByZXR1cm4gcm93cztcclxufVxyXG5cclxudHlwZSBBY2Nlc3NQb2ludFBheWxvYWQgPSB7XHJcbiAgc3NpZDogc3RyaW5nO1xyXG4gIGJ0c05hbWU6IHN0cmluZztcclxuICBpcEFkZHJlc3M6IHN0cmluZyB8IG51bGw7XHJcbiAgZGV2aWNlOiBzdHJpbmcgfCBudWxsO1xyXG4gIHVzZXJuYW1lOiBzdHJpbmcgfCBudWxsO1xyXG4gIHBhc3N3b3JkOiBzdHJpbmcgfCBudWxsO1xyXG4gIHNlY3VyaXR5OiBzdHJpbmcgfCBudWxsO1xyXG4gIHBocmFzZUtleTogc3RyaW5nIHwgbnVsbDtcclxuICBmcmVxdWVuY3k6IHN0cmluZyB8IG51bGw7XHJcbiAgY2hhbm5lbFdpZHRoOiBzdHJpbmcgfCBudWxsO1xyXG4gIG1hY0FkZHJlc3M6IHN0cmluZyB8IG51bGw7XHJcbiAgcm91dGVySWQ6IG51bWJlciB8IG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQWNjZXNzUG9pbnQocGF5bG9hZDogQWNjZXNzUG9pbnRQYXlsb2FkKTogUHJvbWlzZTxudW1iZXI+IHtcclxuICBjb25zdCBbcmVzdWx0XSA9IGF3YWl0IG15c3FsUG9vbC5xdWVyeTxteXNxbC5SZXN1bHRTZXRIZWFkZXI+KFxyXG4gICAgYElOU0VSVCBJTlRPIGFjY2Vzc19wb2ludHMgKFxyXG4gICAgICBzc2lkLFxyXG4gICAgICBidHNfbmFtZSxcclxuICAgICAgaXBfYWRkcmVzcyxcclxuICAgICAgZGV2aWNlLFxyXG4gICAgICB1c2VybmFtZSxcclxuICAgICAgcGFzc3dvcmQsXHJcbiAgICAgIHNlY3VyaXR5LFxyXG4gICAgICBwaHJhc2Vfa2V5LFxyXG4gICAgICBmcmVxdWVuY3ksXHJcbiAgICAgIGNoYW5uZWxfd2lkdGgsXHJcbiAgICAgIG1hY19hZGRyZXNzLFxyXG4gICAgICByb3V0ZXJfaWQsXHJcbiAgICAgIGNyZWF0ZWRfYXRcclxuICAgIClcclxuICAgIFZBTFVFUyAoPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgTk9XKCkpYCxcclxuICAgIFtcclxuICAgICAgcGF5bG9hZC5zc2lkLFxyXG4gICAgICBwYXlsb2FkLmJ0c05hbWUsXHJcbiAgICAgIHBheWxvYWQuaXBBZGRyZXNzLFxyXG4gICAgICBwYXlsb2FkLmRldmljZSxcclxuICAgICAgcGF5bG9hZC51c2VybmFtZSxcclxuICAgICAgcGF5bG9hZC5wYXNzd29yZCxcclxuICAgICAgcGF5bG9hZC5zZWN1cml0eSxcclxuICAgICAgcGF5bG9hZC5waHJhc2VLZXksXHJcbiAgICAgIHBheWxvYWQuZnJlcXVlbmN5LFxyXG4gICAgICBwYXlsb2FkLmNoYW5uZWxXaWR0aCxcclxuICAgICAgcGF5bG9hZC5tYWNBZGRyZXNzLFxyXG4gICAgICBwYXlsb2FkLnJvdXRlcklkLFxyXG4gICAgXSxcclxuICApXHJcblxyXG4gIHJldHVybiByZXN1bHQuaW5zZXJ0SWRcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUFjY2Vzc1BvaW50KGlkOiBudW1iZXIsIHBheWxvYWQ6IEFjY2Vzc1BvaW50UGF5bG9hZCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGF3YWl0IG15c3FsUG9vbC5xdWVyeShcclxuICAgIGBVUERBVEUgYWNjZXNzX3BvaW50c1xyXG4gICAgIFNFVCBzc2lkID0gPywgYnRzX25hbWUgPSA/LCBpcF9hZGRyZXNzID0gPywgZGV2aWNlID0gPywgdXNlcm5hbWUgPSA/LCBwYXNzd29yZCA9ID8sIHNlY3VyaXR5ID0gPywgcGhyYXNlX2tleSA9ID8sIGZyZXF1ZW5jeSA9ID8sIGNoYW5uZWxfd2lkdGggPSA/LCBtYWNfYWRkcmVzcyA9ID8sIHJvdXRlcl9pZCA9ID9cclxuICAgICBXSEVSRSBpZCA9ID9gLFxyXG4gICAgW1xyXG4gICAgICBwYXlsb2FkLnNzaWQsXHJcbiAgICAgIHBheWxvYWQuYnRzTmFtZSxcclxuICAgICAgcGF5bG9hZC5pcEFkZHJlc3MsXHJcbiAgICAgIHBheWxvYWQuZGV2aWNlLFxyXG4gICAgICBwYXlsb2FkLnVzZXJuYW1lLFxyXG4gICAgICBwYXlsb2FkLnBhc3N3b3JkLFxyXG4gICAgICBwYXlsb2FkLnNlY3VyaXR5LFxyXG4gICAgICBwYXlsb2FkLnBocmFzZUtleSxcclxuICAgICAgcGF5bG9hZC5mcmVxdWVuY3ksXHJcbiAgICAgIHBheWxvYWQuY2hhbm5lbFdpZHRoLFxyXG4gICAgICBwYXlsb2FkLm1hY0FkZHJlc3MsXHJcbiAgICAgIHBheWxvYWQucm91dGVySWQsXHJcbiAgICAgIGlkLFxyXG4gICAgXSxcclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVBY2Nlc3NQb2ludChpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgYXdhaXQgbXlzcWxQb29sLnF1ZXJ5KFwiREVMRVRFIEZST00gYWNjZXNzX3BvaW50cyBXSEVSRSBpZCA9ID9cIiwgW2lkXSlcclxufVxyXG4iXSwibmFtZXMiOlsiY3J5cHRvIiwibXlzcWwiLCJjb25maWciLCJob3N0IiwiZGF0YWJhc2UiLCJ1c2VyIiwicGFzc3dvcmQiLCJjaGFyc2V0Iiwid2FpdEZvckNvbm5lY3Rpb25zIiwiY29ubmVjdGlvbkxpbWl0IiwibmFtZWRQbGFjZWhvbGRlcnMiLCJnbG9iYWxGb3JQb29sIiwiZ2xvYmFsVGhpcyIsIm15c3FsUG9vbCIsIl9fbXlzcWxQb29sIiwiY3JlYXRlUG9vbCIsImRlY2ltYWxOdW1iZXJzIiwiZmV0Y2hBY2Nlc3NQb2ludHMiLCJyb3dzIiwicXVlcnkiLCJXSUJfVElNRVpPTkUiLCJPTkVfREFZX01TIiwiZm9ybWF0RGF0ZVRvTXlTUUwiLCJ0aW1lem9uZSIsImRhdGUiLCJEYXRlIiwiZm9ybWF0dGVyIiwiSW50bCIsIkRhdGVUaW1lRm9ybWF0IiwidGltZVpvbmUiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwiaG91cjEyIiwicGFydHMiLCJmb3JtYXRUb1BhcnRzIiwicmVkdWNlIiwiYWNjIiwicGFydCIsInR5cGUiLCJ2YWx1ZSIsInBhZFN0YXJ0IiwiZmV0Y2hQZW5kaW5nSXRlbXMiLCJub3ciLCJ0aHJlc2hvbGREYXRlIiwiZ2V0VGltZSIsInRocmVzaG9sZCIsImNyZWF0ZVBlbmRpbmdJdGVtIiwicGF5bG9hZCIsImNyZWF0ZWRBdCIsInJlc3VsdCIsImN1c3RvbWVyTmFtZSIsImRlc2NyaXB0aW9uIiwiYWRkcmVzcyIsImthYnVwYXRlbiIsImluc2VydElkIiwiZGVsZXRlUGVuZGluZ0l0ZW0iLCJpZCIsInZlcmlmeUFkbWluQ3JlZGVudGlhbHMiLCJ1c2VybmFtZSIsImxlbmd0aCIsInN0b3JlZCIsImNhbmRpZGF0ZXMiLCJ0ZXN0IiwicHVzaCIsImhhc2hXaXRoQWxnb3JpdGhtIiwiaXNNYXRjaCIsInNvbWUiLCJjYW5kaWRhdGUiLCJ0aW1pbmdTYWZlQ29tcGFyZSIsIkRFRkFVTFRfQ0xJRU5UX1BBR0VfU0laRSIsIk1BWF9DTElFTlRfUEFHRV9TSVpFIiwiZmV0Y2hDbGllbnRzIiwib3B0aW9ucyIsInJhd1BhZ2UiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsInBhZ2UiLCJyYXdQYWdlU2l6ZSIsInBhZ2VTaXplIiwiTWF0aCIsIm1pbiIsIm1heCIsImZsb29yIiwic2VhcmNoVGVybSIsInNlYXJjaCIsInRyaW0iLCJyYXdSb3V0ZXJJZCIsInJvdXRlcklkIiwibGlrZVRlcm0iLCJyZXBsYWNlIiwic2VhcmNoUGFyYW1zIiwid2hlcmVQYXJ0cyIsIndoZXJlUGFyYW1zIiwid2hlcmVDbGF1c2UiLCJqb2luIiwiY291bnRSb3dzIiwidG90YWxJdGVtcyIsInRvdGFsIiwidG90YWxQYWdlcyIsImNlaWwiLCJzYWZlUGFnZSIsIm9mZnNldCIsIml0ZW1zIiwidXBkYXRlQ2xpZW50U3RhdHVzIiwic3RhdHVzIiwiRXJyb3IiLCJyb3ciLCJjdXJyZW50UHJvZmlsZSIsInByb2ZpbGUiLCJzdG9yZWRPcmlnaW5hbFByb2ZpbGUiLCJwcm9maWxlX2FzbGkiLCJ0b0xvd2VyQ2FzZSIsIm9yaWdpbmFsUHJvZmlsZSIsIm5leHRQcm9maWxlIiwiY3JlYXRlQ2xpZW50IiwiaXBBZGRyZXNzIiwicmF3VHlwZSIsImNvbW1lbnQiLCJudW1lcmljUm91dGVySWQiLCJiYXNlUHJvZmlsZSIsInByb2ZpbGVBc2xpIiwiY3JlYXRlQWt0aXZhc2lDbGllbnQiLCJuYW1hUGVsYW5nZ2FuIiwibmFtYUxheWFuYW4iLCJrYXBhc2l0YXNMYXlhbmFuIiwidmxhbklkIiwibmFtYU1ldHJvIiwic2l0ZU1ldHJvIiwia2FwYXNpdGFzTWV0cm8iLCJpcEdhdGV3YXkiLCJyb3V0ZXJHYXRld2F5IiwiY3JlYXRlZEJ5IiwidXBkYXRlQ2xpZW50IiwiZXhpc3RpbmciLCJ1c2VybmFtZVJhdyIsInVuZGVmaW5lZCIsImlwUmF3IiwiaXBfYWRkcmVzcyIsInR5cGVSYXciLCJjb21tZW50UmF3Iiwicm91dGVyVmFsdWUiLCJyb3V0ZXJfaWQiLCJzdGF0dXNJbnB1dCIsInByb2ZpbGVJbnB1dFJhdyIsInByb2ZpbGVJbnB1dCIsImV4aXN0aW5nUHJvZmlsZSIsImV4aXN0aW5nUHJvZmlsZUFzbGkiLCJkZWxldGVDbGllbnQiLCJhZmZlY3RlZFJvd3MiLCJhIiwiYiIsImJ1ZkEiLCJCdWZmZXIiLCJmcm9tIiwiYnVmQiIsInRpbWluZ1NhZmVFcXVhbCIsImxlbiIsInBhZGRlZEEiLCJhbGxvYyIsInBhZGRlZEIiLCJjb3B5IiwiYWxnb3JpdGhtIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsImZldGNoUm91dGVycyIsImNyZWF0ZUFjY2Vzc1BvaW50Iiwic3NpZCIsImJ0c05hbWUiLCJkZXZpY2UiLCJzZWN1cml0eSIsInBocmFzZUtleSIsImZyZXF1ZW5jeSIsImNoYW5uZWxXaWR0aCIsIm1hY0FkZHJlc3MiLCJ1cGRhdGVBY2Nlc3NQb2ludCIsImRlbGV0ZUFjY2Vzc1BvaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/named-placeholders","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/generate-function","vendor-chunks/safer-buffer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fclients%2Froute&page=%2Fapi%2Fclients%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fclients%2Froute.ts&appDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CTri%20Hartanto%5CDownloads%5CGABUTAN%20MASS%20HARR%5CISOLIR%5CPANELNOC2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();